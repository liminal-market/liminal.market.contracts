/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SecurityToken, SecurityTokenInterface } from "../SecurityToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BalanceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "aUSDAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aUsdBalance",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "setQuantity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015103803806200151083398101604081905262000034916200024d565b818162000041336200008a565b815162000056906004906020850190620000da565b5080516200006c906005906020840190620000da565b5050600680546001600160a01b0319163317905550620002f4915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000e890620002b7565b90600052602060002090601f0160209004810192826200010c576000855562000157565b82601f106200012757805160ff191683800117855562000157565b8280016001018555821562000157579182015b82811115620001575782518255916020019190600101906200013a565b506200016592915062000169565b5090565b5b808211156200016557600081556001016200016a565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a857600080fd5b81516001600160401b0380821115620001c557620001c562000180565b604051601f8301601f19908116603f01168101908282118183101715620001f057620001f062000180565b816040528381526020925086838588010111156200020d57600080fd5b600091505b8382101562000231578582018301518183018401529082019062000212565b83821115620002435760008385830101525b9695505050505050565b600080604083850312156200026157600080fd5b82516001600160401b03808211156200027957600080fd5b620002878683870162000196565b935060208501519150808211156200029e57600080fd5b50620002ad8582860162000196565b9150509250929050565b600181811c90821680620002cc57607f821691505b60208210811415620002ee57634e487b7160e01b600052602260045260246000fd5b50919050565b61120c80620003046000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c8063715018a6116100b2578063a457c2d711610081578063add6a68711610066578063add6a6871461024a578063dd62ed3e1461025d578063f2fde38b1461027057600080fd5b8063a457c2d714610224578063a9059cbb1461023757600080fd5b8063715018a6146101e65780638da5cb5b146101ee57806395d89b41146102095780639dc29fac1461021157600080fd5b8063313ce567116100ee578063313ce56714610186578063395093511461019557806340c10f19146101a857806370a08231146101bd57600080fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b600080fd5b610128610283565b6040516101359190610fec565b60405180910390f35b61015161014c36600461101b565b610315565b6040519015158152602001610135565b6003545b604051908152602001610135565b610151610181366004611045565b610328565b60405160128152602001610135565b6101516101a336600461101b565b6103ae565b6101bb6101b636600461101b565b6103da565b005b6101656101cb366004611081565b6001600160a01b031660009081526001602052604090205490565b6101bb6104a3565b6000546040516001600160a01b039091168152602001610135565b610128610509565b6101bb61021f36600461101b565b610518565b61015161023236600461101b565b610665565b61015161024536600461101b565b610703565b6101bb61025836600461101b565b61077c565b61016561026b36600461109c565b610950565b6101bb61027e366004611081565b61097d565b606060048054610292906110cf565b80601f01602080910402602001604051908101604052809291908181526020018280546102be906110cf565b801561030b5780601f106102e05761010080835404028352916020019161030b565b820191906000526020600020905b8154815290600101906020018083116102ee57829003601f168201915b5050505050905090565b60006103218383610a5f565b9392505050565b600033610336858285610a6d565b6006546001600160a01b031663ae1b768d8587610351610509565b876040518563ffffffff1660e01b8152600401610371949392919061110a565b600060405180830381600087803b15801561038b57600080fd5b505af115801561039f573d6000803e3d6000fd5b50600198975050505050505050565b6000336103d08185856103c18383610950565b6103cb919061115d565b610ae7565b5060019392505050565b6000546001600160a01b031633146104395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6104438282610c3f565b7f704496b72f6d3fd6e462fa31e27faddedde127bc9942bc94320e0c115b00cedf828261046e610509565b6001600160a01b0386166000908152600160205260409020546040516104979493929190611175565b60405180910390a15050565b6000546001600160a01b031633146104fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610430565b6105076000610d1e565b565b606060058054610292906110cf565b6000546001600160a01b031633146105725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610430565b6001600160a01b03821660009081526001602052604081205490506105cc6040518060400160405280600781526020017f616d6f756e743a0000000000000000000000000000000000000000000000000081525083610d86565b61060b6040518060400160405280600781526020017f62616c616e63650000000000000000000000000000000000000000000000000081525082610d86565b81811015610617578091505b6106566040518060400160405280600881526020017f6275726e696e673a00000000000000000000000000000000000000000000000081525083610d86565b6106608383610df9565b505050565b600033816106738286610950565b9050838110156106eb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610430565b6106f88286868403610ae7565b506001949350505050565b6006546000906001600160a01b031663ae1b768d8433610721610509565b866040518563ffffffff1660e01b8152600401610741949392919061110a565b600060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b5060019695505050505050565b6000546001600160a01b031633146107d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610430565b6001600160a01b038216600090815260016020526040902054818114156107fc57505050565b8082111561081c5761081783610812838561119d565b610c3f565b61082f565b61082f8361082a848461119d565b610df9565b61086e6040518060400160405280600c81526020017f746f6b656e202d207174793a000000000000000000000000000000000000000081525083610d86565b6108ad6040518060400160405280601681526020017f746f6b656e202d2062616c616e63654265666f72653a0000000000000000000081525082610d86565b6001600160a01b03831660009081526001602052604081205490506109076040518060400160405280601581526020017f746f6b656e202d2062616c616e636541667465723a000000000000000000000081525082610d86565b604080516001600160a01b0386168152602081018590527faca675004c66aff66f6e84aac634806e6c3550b1a6ba29fc8e1c1471ad1babf1910160405180910390a150505b5050565b6001600160a01b038083166000908152600260209081526040808320938516835292905290812054610321565b6000546001600160a01b031633146109d75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610430565b6001600160a01b038116610a535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610430565b610a5c81610d1e565b50565b6000336103d0818585610ae7565b6000610a798484610950565b90506000198114610ae15781811015610ad45760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610430565b610ae18484848403610ae7565b50505050565b6001600160a01b038316610b625760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610430565b6001600160a01b038216610bde5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610430565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610c955760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610430565b8060036000828254610ca7919061115d565b90915550506001600160a01b03821660009081526001602052604081208054839290610cd490849061115d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61094c8282604051602401610d9c9291906111b4565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052610f7e565b6001600160a01b038216610e755760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610430565b6001600160a01b03821660009081526001602052604090205481811015610f045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610430565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610f3390849061119d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000815180845260005b81811015610fc557602081850181015186830182015201610fa9565b81811115610fd7576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103216020830184610f9f565b80356001600160a01b038116811461101657600080fd5b919050565b6000806040838503121561102e57600080fd5b61103783610fff565b946020939093013593505050565b60008060006060848603121561105a57600080fd5b61106384610fff565b925061107160208501610fff565b9150604084013590509250925092565b60006020828403121561109357600080fd5b61032182610fff565b600080604083850312156110af57600080fd5b6110b883610fff565b91506110c660208401610fff565b90509250929050565b600181811c908216806110e357607f821691505b6020821081141561110457634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160a01b038087168352808616602084015250608060408301526111366080830185610f9f565b905082606083015295945050505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561117057611170611147565b500190565b6001600160a01b03851681528360208201526080604082015260006111366080830185610f9f565b6000828210156111af576111af611147565b500390565b6040815260006111c76040830185610f9f565b9050826020830152939250505056fea2646970667358221220d629e91c4efb802723e5e5a542fecaafc8496af2cb6da7be1f53e7b669c7488364736f6c63430008090033";

type SecurityTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecurityTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecurityToken__factory extends ContractFactory {
  constructor(...args: SecurityTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SecurityToken> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<SecurityToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): SecurityToken {
    return super.attach(address) as SecurityToken;
  }
  connect(signer: Signer): SecurityToken__factory {
    return super.connect(signer) as SecurityToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecurityTokenInterface {
    return new utils.Interface(_abi) as SecurityTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SecurityToken {
    return new Contract(address, _abi, signerOrProvider) as SecurityToken;
  }
}
